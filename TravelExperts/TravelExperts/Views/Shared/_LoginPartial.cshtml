@using Microsoft.AspNet.Identity
@if (Request.IsAuthenticated)
{
    <button class="loginlnk dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Account
    </button>
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "dropdown-menu p-4 navbar-right" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            @*@Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })*@
            @Html.ActionLink("Update Profile", "Index", "Customer")
        </div>
        <div class="form-group">
            @Html.ActionLink("Past Purchases", "TravelProducts", "Customer")
        </div>
        <div class="form-group">
            <a class="btn btn-primary" href="javascript:document.getElementById('logoutForm').submit()">Log off</a>
        </div>

    }
}
else
{
    <ul>
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}


@*<button class="loginlnk dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Login
    </button>
    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal dropdown-menu p-4 cont", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group loginAlign">
            @Html.LabelFor(m => m.Email)

            @Html.TextBoxFor(m => m.Email, null, new { @class = "loginAlign" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password)

            @Html.PasswordFor(m => m.Password, new { @class = "loginAlign" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            <div class="form-check">
                @Html.CheckBoxFor(m => m.RememberMe)
                @Html.LabelFor(m => m.RememberMe)
            </div>
        </div>
        <button id="btnLogin" type="submit" class="btn btn-primary">Sign in</button>*@
@*<p>
        @Html.ActionLink("Register as a new user", "Register")
    </p>*@
@* Enable this once you have account confirmation enabled for password reset functionality
    <p>
        @Html.ActionLink("Forgot your password?", "ForgotPassword")
    </p>*@

@*<form class="dropdown-menu p-4">
        <div class="form-group">
            @Html.LabelFor(e => e)
            <label for="username">Email address</label>
            <input type="email" class="form-control" id="username" placeholder="email@example.com">
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <input type="password" class="form-control" id="password" placeholder="Password">
        </div>
        <div class="form-group">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="remember">
                <label class="form-check-label" for="remember">
                    Remember me
                </label>
            </div>
        </div>
        <button id="btnLogin" type="submit" class="btn btn-primary">Sign in</button>
    </form>*@
